{"version":3,"sources":["components/home/components/BTCChart.js","service/BitcoinService.js","components/home/Home.js","App.js","index.js"],"names":["dataChart","ResponsiveContainer","width","height","LineChart","data","margin","top","right","left","bottom","CartesianGrid","strokeDasharray","XAxis","dataKey","YAxis","Tooltip","Legend","Line","type","stroke","activeDot","r","BitcoinService","start","end","axios","get","Home","useState","Date","moment","add","toISOString","startDate","setStartDate","endDate","setEndDate","date","Price","setData","className","selected","onChange","onClick","getDateByRange","format","then","res","result","push","transformData","bpi","catch","err","console","log","alert","message","BTCChart","App","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"sRAgDe,cAAkB,IAAhBA,EAAe,EAAfA,UACb,OACI,cAACC,EAAA,EAAD,CAAqBC,MAAM,OAAOC,OAAO,OAAzC,SACI,eAACC,EAAA,EAAD,CACIF,MAAO,IACPC,OAAQ,IACRE,KAAML,EACNM,OAAQ,CACJC,IAAK,GACLC,MAAO,GACPC,KAAM,GACNC,OAAQ,IARhB,UAWI,cAACC,EAAA,EAAD,CAAeC,gBAAgB,QAC/B,cAACC,EAAA,EAAD,CAAOC,QAAQ,SACf,cAACC,EAAA,EAAD,IACA,cAACC,EAAA,EAAD,IACA,cAACC,EAAA,EAAD,IACA,cAACC,EAAA,EAAD,CAAMC,KAAK,WAAWL,QAAQ,QAAQM,OAAO,UAAUC,UAAW,CAACC,EAAG,W,oCCzDvEC,E,mGANX,SAAsBC,EAAOC,GACzB,OAAOC,IAAMC,IAAN,sEAAyEH,EAAzE,gBAAsFC,Q,uBCyDtFG,EAtDF,WAET,MAAkCC,mBAAS,IAAIC,KAAKC,MAASC,KAAK,GAAI,QAAQC,gBAA9E,mBAAOC,EAAP,KAAkBC,EAAlB,KACA,EAA8BN,mBAAS,IAAIC,MAA3C,mBAAOM,EAAP,KAAgBC,EAAhB,KAEA,EAAwBR,mBAAS,CAC7B,CACIS,KAAM,aACNC,MAAO,MAEX,CACID,KAAM,aACNC,MAAO,QAPf,mBAAOlC,EAAP,KAAamC,EAAb,KA+BA,OACI,sBAAKC,UAAU,OAAf,UACI,+CAEI,cAAC,IAAD,CAAYC,SAAUR,EAAWS,SAAU,SAACL,GAAD,OAAUH,EAAaG,SAEtE,6CAEI,cAAC,IAAD,CAAYI,SAAUN,EAASO,SAAU,SAACL,GAAD,OAAUD,EAAWC,SAElE,wBAAQM,QAnBK,WACjBrB,EAAesB,eAAed,IAAOG,GAAWY,OAAO,cAAef,IAAOK,GAASU,OAAO,eAAeC,MAAK,SAAAC,GAC7GR,EAbc,SAACnC,GACnB,IAAM4C,EAAS,GACf,IAAK,IAAMnC,KAAWT,EAClB4C,EAAOC,KAAK,CACRZ,KAAOxB,EACPyB,MAAQlC,EAAKS,KAGrB,OAAOmC,EAKKE,CAAcH,EAAI3C,KAAK+C,SAChCC,OAAM,SAAAC,GACLC,QAAQC,IAAIF,GACZG,MAAMH,EAAII,aAcV,oBACA,qBAAKjB,UAAU,cAAf,SACI,cAACkB,EAAD,CAAU3D,UAAWK,UC9CtBuD,MARf,WACI,OACI,8BACI,cAAC,EAAD,OCDZC,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,W","file":"static/js/main.fe8fcbee.chunk.js","sourcesContent":["import React from 'react';\r\nimport {CartesianGrid, Legend, Line, LineChart, ResponsiveContainer, Tooltip, XAxis, YAxis} from 'recharts';\r\n\r\n// const data = [\r\n//     {\r\n//         name: 'Page A',\r\n//         uv: 4000,\r\n//         pv: 2400,\r\n//         amt: 2400,\r\n//     },\r\n//     {\r\n//         name: 'Page B',\r\n//         uv: 3000,\r\n//         pv: 1398,\r\n//         amt: 2210,\r\n//     },\r\n//     {\r\n//         name: 'Page C',\r\n//         uv: 2000,\r\n//         pv: 9800,\r\n//         amt: 2290,\r\n//     },\r\n//     {\r\n//         name: 'Page D',\r\n//         uv: 2780,\r\n//         pv: 3908,\r\n//         amt: 2000,\r\n//     },\r\n//     {\r\n//         name: 'Page E',\r\n//         uv: 1890,\r\n//         pv: 4800,\r\n//         amt: 2181,\r\n//     },\r\n//     {\r\n//         name: 'Page F',\r\n//         uv: 2390,\r\n//         pv: 3800,\r\n//         amt: 2500,\r\n//     },\r\n//     {\r\n//         name: 'Page G',\r\n//         uv: 3490,\r\n//         pv: 4300,\r\n//         amt: 2100,\r\n//     },\r\n// ];\r\n\r\nexport default ({dataChart}) => {\r\n    return (\r\n        <ResponsiveContainer width=\"100%\" height=\"100%\">\r\n            <LineChart\r\n                width={500}\r\n                height={300}\r\n                data={dataChart}\r\n                margin={{\r\n                    top: 15,\r\n                    right: 30,\r\n                    left: 20,\r\n                    bottom: 15,\r\n                }}\r\n            >\r\n                <CartesianGrid strokeDasharray=\"3 3\"/>\r\n                <XAxis dataKey=\"date\"/>\r\n                <YAxis/>\r\n                <Tooltip/>\r\n                <Legend/>\r\n                <Line type=\"monotone\" dataKey=\"Price\" stroke=\"#8884d8\" activeDot={{r: 8}}/>\r\n            </LineChart>\r\n        </ResponsiveContainer>\r\n    );\r\n}\r\n","import axios from \"axios\";\r\n\r\nclass BitcoinService {\r\n\r\n    static getDateByRange(start, end) {\r\n        return axios.get(`https://api.coindesk.com/v1/bpi/historical/close.json?start=${start}&end=${end}`)// Add proxy to package.json\r\n        // return axios.get(`https://api.coindesk.com/v1/bpi/historical/close.json?start=${start}&end=${end}`)\r\n    }\r\n}\r\n\r\nexport default BitcoinService\r\n","import React, {useState} from 'react';\r\nimport DatePicker from \"react-datepicker\";\r\nimport './Home.scss'\r\nimport \"react-datepicker/dist/react-datepicker.css\";\r\nimport BTCChart from \"./components/BTCChart\";\r\nimport BitcoinService from \"../../service/BitcoinService\";\r\nimport moment from \"moment\";\r\n\r\nconst Home = () => {\r\n\r\n    const [startDate, setStartDate] = useState(new Date(moment().add(-10, 'days').toISOString())); // today\r\n    const [endDate, setEndDate] = useState(new Date()); // today - 10 days ago\r\n\r\n    const [data, setData] = useState([\r\n        {\r\n            date: \"2021-02-02\",\r\n            Price: 5261\r\n            },\r\n        {\r\n            date: \"2021-02-03\",\r\n            Price: 3444\r\n        },\r\n    ])\r\n\r\n    const transformData = (data) => {\r\n        const result = [];\r\n        for (const dataKey in data) {\r\n            result.push({\r\n                date : dataKey,\r\n                Price : data[dataKey]\r\n            })\r\n        }\r\n        return result\r\n    }\r\n\r\n    const handleRender = () => {\r\n        BitcoinService.getDateByRange(moment(startDate).format(\"YYYY-MM-DD\"), moment(endDate).format(\"YYYY-MM-DD\")).then(res => {\r\n            setData(transformData(res.data.bpi))\r\n        }).catch(err => {\r\n            console.log(err)\r\n            alert(err.message)\r\n        })\r\n    }\r\n\r\n    return (\r\n        <div className=\"home\">\r\n            <label>\r\n                StartDate:\r\n                <DatePicker selected={startDate} onChange={(date) => setStartDate(date)}/>\r\n            </label>\r\n            <label>\r\n                EndDate:\r\n                <DatePicker selected={endDate} onChange={(date) => setEndDate(date)}/>\r\n            </label>\r\n            <button onClick={handleRender}>Render</button>\r\n            <div className=\"home__chart\">\r\n                <BTCChart dataChart={data}/>\r\n            </div>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default Home;\r\n","import Home from \"./components/home/Home\";\n\nfunction App() {\n    return (\n        <div>\n            <Home/>\n        </div>\n    );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}